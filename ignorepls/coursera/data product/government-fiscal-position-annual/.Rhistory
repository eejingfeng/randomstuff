runApp('JF_Div_update_final.R')
runApp('C:/Users/eejin/Desktop/Reconciliation Dashboard/JF_Div_update_final.R')
runApp('C:/Users/eejin/Desktop/Reconciliation Dashboard/JF_Div_update_final.R')
library(shiny); runApp('C:/Users/eejin/Desktop/Reconciliation Dashboard/JF_Div_update_final.R')
runApp('C:/Users/eejin/Desktop/Reconciliation Dashboard/JF_Div_update_final.R')
runApp('C:/Users/eejin/Desktop/Reconciliation Dashboard/JF_Div_update_final.R')
runApp('C:/Users/eejin/Desktop/Reconciliation Dashboard/JF_Div_update_final.R')
library(shiny); runApp('C:/Users/eejin/Desktop/Reconciliation Dashboard/JF_Div_update_final.R')
runApp('C:/Users/eejin/Desktop/Reconciliation Dashboard/JF_Div_update_final.R')
runApp('C:/Users/eejin/Desktop/Reconciliation Dashboard/JF_Div_update_final.R')
runApp('C:/Users/eejin/Desktop/Reconciliation Dashboard/JF_Div_update_final.R')
library(shiny); runApp('C:/Users/eejin/Desktop/Reconciliation Dashboard/JF_Div_update_final.R')
runApp('C:/Users/eejin/Desktop/Reconciliation Dashboard/JF_Div_update_final.R')
runApp('C:/Users/eejin/Desktop/Reconciliation Dashboard/JF_Div_update_final.R')
runApp('JF_Div_update_final.R')
runApp('C:/Users/eejin/Desktop/Reconciliation Dashboard/JF_Div_update_final.R')
runApp('C:/Users/eejin/Desktop/Reconciliation Dashboard/JF_Div_update_final.R')
runApp('C:/Users/eejin/Desktop/Reconciliation Dashboard/JF_Div_update_final.R')
runApp('C:/Users/eejin/Desktop/Reconciliation Dashboard/JF_Div_update_final.R')
runApp('C:/Users/eejin/Desktop/Reconciliation Dashboard/JF_Div_update_final.R')
runApp('C:/Users/eejin/Desktop/Reconciliation Dashboard/JF_Div_update_final.R')
runApp('C:/Users/eejin/Desktop/Reconciliation Dashboard/JF_Div_update_final.R')
runApp('C:/Users/eejin/Desktop/Reconciliation Dashboard/JF_Div_update_final.R')
runApp('C:/Users/eejin/Desktop/Reconciliation Dashboard/JF_Div_update_final.R')
runApp('C:/Users/eejin/Desktop/Reconciliation Dashboard/JF_Div_update_final.R')
runApp('C:/Users/eejin/Desktop/Reconciliation Dashboard/JF_Div_update_final.R')
runApp('C:/Users/eejin/Desktop/Reconciliation Dashboard/JF_Div_update_final.R')
runApp('C:/Users/eejin/Desktop/Reconciliation Dashboard/JF_Div_update_final.R')
runApp('C:/Users/eejin/Desktop/Reconciliation Dashboard/JF_Div_update_final.R')
runApp('C:/Users/eejin/Desktop/Reconciliation Dashboard/JF_Div_update_final.R')
runApp('C:/Users/eejin/Desktop/Reconciliation Dashboard/JF_Div_update_final.R')
runApp('JF_Div_update_final.R')
runApp('C:/Users/eejin/Desktop/Reconciliation Dashboard/JF_Div_update_final.R')
runApp('C:/Users/eejin/Desktop/Reconciliation Dashboard/JF_Div_update_final.R')
runApp('C:/Users/eejin/Desktop/Reconciliation Dashboard/JF_Div_update_final.R')
runApp('C:/Users/eejin/Desktop/Reconciliation Dashboard/JF_Div_update_final.R')
runApp('C:/Users/eejin/Desktop/Reconciliation Dashboard/JF_Div_update_final.R')
runApp('C:/Users/eejin/Desktop/Reconciliation Dashboard/JF_Div_update_final.R')
runApp('JF_Div_update_final.R')
runApp('C:/Users/eejin/Desktop/Reconciliation Dashboard/JF_Div_update_final.R')
runApp('C:/Users/eejin/Desktop/Reconciliation Dashboard/JF_Div_update_final.R')
runApp('JF_Div_update_final.R')
runApp('JF_Div_update_final.R')
runApp('C:/Users/eejin/Desktop/Reconciliation Dashboard/JF_Div_update_final.R')
runApp('C:/Users/eejin/Desktop/Reconciliation Dashboard/JF_Div_update_final.R')
runApp('C:/Users/eejin/Desktop/Reconciliation Dashboard/JF_Div_update_final.R')
runApp('C:/Users/eejin/Desktop/Reconciliation Dashboard/JF_Div_update_final.R')
library(shiny); runApp('C:/Users/eejin/Desktop/Reconciliation Dashboard/JF_Div_update_final.R')
runApp('C:/Users/eejin/Desktop/Reconciliation Dashboard/JF_Div_update_final.R')
runApp('C:/Users/eejin/Desktop/Reconciliation Dashboard/JF_Div_update_final.R')
runApp('JF_Div_update_final.R')
runApp('JF_Div_update_final.R')
runApp('C:/Users/eejin/Desktop/Reconciliation Dashboard/JF_Div_update_final.R')
runApp('C:/Users/eejin/Desktop/Reconciliation Dashboard/JF_Div_update_final.R')
runApp('C:/Users/eejin/Desktop/Reconciliation Dashboard/JF_Div_update_final.R')
runApp('JF_Div_update_final.R')
runApp('C:/Users/eejin/Desktop/Reconciliation Dashboard/JF_Div_update_final.R')
runApp('JF_Div_update_final.R')
runApp('C:/Users/eejin/Desktop/Reconciliation Dashboard/JF_Div_update_final.R')
runApp('JF_Div_update_final.R')
runApp('C:/Users/eejin/Desktop/Reconciliation Dashboard/JF_Div_update_final.R')
runApp('C:/Users/eejin/Desktop/Reconciliation Dashboard/JF_Div_update_final.R')
runApp('JF_Div_update_final.R')
runApp('C:/Users/eejin/Desktop/Reconciliation Dashboard/JF_Div_update_final.R')
runApp('C:/Users/eejin/Desktop/Reconciliation Dashboard/JF_Div_update_final.R')
runApp('C:/Users/eejin/Desktop/Reconciliation Dashboard/JF_Div_update_final.R')
library(shiny); runApp('C:/Users/eejin/Desktop/Reconciliation Dashboard/JF_Div_update_final.R')
library(shiny); runApp('C:/Users/eejin/Desktop/Work/Reconciliation Dashboard/JF_Div_update_final ca.080920.R')
runApp('C:/Users/eejin/Desktop/Work/Reconciliation Dashboard/JF_Div_update_final.R')
runApp('C:/Users/eejin/Desktop/Work/Reconciliation Dashboard/JF_Div_update_final.R')
runApp('C:/Users/eejin/Desktop/Work/Reconciliation Dashboard/JF_Div_update_final.R')
runApp('C:/Users/eejin/Desktop/Work/Reconciliation Dashboard/JF_Div_update_final.R')
runApp('C:/Users/eejin/Desktop/Work/Reconciliation Dashboard/JF_Div_update_final.R')
runApp('C:/Users/eejin/Desktop/Work/Reconciliation Dashboard/JF_Div_update_final.R')
runApp('C:/Users/eejin/Desktop/Work/Reconciliation Dashboard/JF_Div_update_final.R')
runApp('C:/Users/eejin/Desktop/Work/Reconciliation Dashboard/JF_Div_update_final.R')
runApp('C:/Users/eejin/Desktop/Work/Reconciliation Dashboard/JF_Div_update_final.R')
runApp('C:/Users/eejin/Desktop/Work/Reconciliation Dashboard/JF_Div_update_final.R')
Sys.getenv()
read.csv('C:\Users\eejin\Desktop\car.data')
read.csv('C:/Users/eejin/Desktop/car.data')
df <- read.csv('C:/Users/eejin/Desktop/car.data')
View(df)
df <- read.csv('C:/Users/eejin/Desktop/car.data',header = FALSE)
header <- c('buying','maint','doors','persons','lug_boot','safety','class')
names(df) <- header
for (col in names) {
df[col] <- as.factor(df[col])
}
for (col in names) { df[col] <- as.factor(df[col])}
for (col in header){ df[col] <- as.factor(df[col])}
str(df)
df <- read.csv('C:/Users/eejin/Desktop/car.data',header = FALSE)
header <- c('buying','maint','doors','persons','lug_boot','safety','class')
names(df) <- header
str(df)
for (col in header){ df[col] <- as.factor(df[col])}
df <- read.csv('C:/Users/eejin/Desktop/car.data',header = FALSE)
header <- c('buying','maint','doors','persons','lug_boot','safety','class')
names(df) <- header
for (col in header){ df$col <- as.factor(df$col)}
str(df)
length(header)
df <- read.csv('C:/Users/eejin/Desktop/car.data',header = FALSE)
header <- c('buying','maint','doors','persons','lug_boot','safety','class')
names(df) <- header
for (col in length(header)){df[,col] <- as.factor(df[,col])}
str(df)
df <- read.csv('C:/Users/eejin/Desktop/car.data',header = FALSE)
header <- c('buying','maint','doors','persons','lug_boot','safety','class')
names(df) <- header
for (col in 1:length(header)){df[,col] <- as.factor(df[,col])}
str(df)
n <- dim(df)[1]
set.seed(2)
train <- sample(1:n, n/2)    # randomly select half as training
test <- setdiff(1:n, train)  # remaining half form test set
df_test <- df[test]
buying <- df['buying']
View(buying)
str(buying)
df <- df[-c('buying')]
df <- df[,-c('buying')]
df <- df[,c(-1)]
df <- read.csv('C:/Users/eejin/Desktop/car.data',header = FALSE)
header <- c('buying','maint','doors','persons','lug_boot','safety','class')
names(df) <- header
for (col in 1:length(header)){df[,col] <- as.factor(df[,col])}
str(df)
n <- dim(df)[1]
set.seed(2)
train <- sample(1:n, n/2)    # randomly select half as training
test <- setdiff(1:n, train)  # remaining half form test set
buying <- df['buying']
buying <- df['buying']
df_train <- df[train,c(-1)]
df_test df[test,c(-1)]
buying <- df['buying']
df_train <- df[train,c(-1)]
df_test <- df[test,c(-1)]
View(df_test)
View(df_train)
buying_train <- buying[train]
View(buying)
buying_train <- buying[train,]
buying_train
buying_test <- buying[test,]
library(class)
knn_pred <- knn(df_train, df_test, buying_train, k=5) # using three nearest neighbour
table(knn_pred, buying_test)
mean(knn_pred==Direction_test)
View(df_test)
View(df_train)
View(buying)
buying_train <- buying[train]
buying_train <- buying[train,]
knn_pred <- knn(df_train, df_test, buying_train, k=5)
df_num <- data.frame(df)
df_num <- data.frame(df)
for (col in 1:length(header)){df_num[,col] <- as.numeric(df_num[,col])}
str(df_num)
buying <- df_num['buying']
df_train <- df_num[train,c(-1)]
df_test <- df_num[test,c(-1)]
buying_train <- buying[train,]
buying_test <- buying[test,]
knn_pred <- knn(df_train, df_test, buying_train, k=5)
table(knn_pred, buying_test)
mean(knn_pred==Direction_test)
mean(knn_pred==buying_test)
library(MASS)
(lda_fit <- lda(buying ~ ., data=df_num, subset=train))
names(lda_fit)
lda_fit$prior  # estimates of proportions of each class (pi)
lda_fit$means  # estimates of mean of each class (mu)
lda_pred <- predict(lda_fit, df_num[test,])
names(lda_pred)
lda_class <- lda_pred$class  # class predictions from LDA for test set
head(lda_class)
table(lda_class, Direction_test)  # confusion matrix for test set
table(lda_class, buying_test)  # confusion matrix for test set
mean(lda_class==buying_test)
head(lda_pred$posterior)
sum(lda_pred$posterior[,1]>=.5)
sum(lda_pred$posterior[,1]<.5)
cbind(lda_pred$posterior[1:20,], lda_class[1:20])
df_num <- data.frame(df)
for (col in 1:length(header)){df_num[,col] <- as.numeric(df_num[,col])}
str(df_num)
buying <- df_num['class']
df_train <- df_num[train,c(-7)]
df_test <- df_num[test,c(-7)]
buying_train <- buying[train,]
buying_test <- buying[test,]
knn_pred <- knn(df_train, df_test, buying_train, k=5)
table(knn_pred, buying_test)
mean(knn_pred==buying_test)
buying <- df_num['buying']
df_train <- df_num[train,c(-1)]
df_test <- df_num[test,c(-1)]
buying_train <- buying[train,]
buying_test <- buying[test,]
knn_pred <- knn(df_train, df_test, buying_train, k=5)
table(knn_pred, buying_test)
mean(knn_pred==buying_test)
x <- c(0.18, -1.54, 0.42, 0.95)
w <- c(2, 1, 3, 1)
lsfit
sum(x*w)/sum(w)
x <- c(0.8, 0.47, 0.51, 0.73, 0.36, 0.58, 0.57, 0.85, 0.44, 0.42)
y <- c(1.39, 0.72, 1.55, 0.48, 1.19, -1.59, 1.23, -0.65, 1.49, 0.05)
lm(y~x+0)
data("mtcars")
mtcars
lm(mtcars$mpg~mtcars$wt)
lm(mpg~wt,mtcars)
x <- c(0.8, 0.47, 0.51, 0.73, 0.36, 0.58, 0.57, 0.85, 0.44, 0.42)
y <- c(1.39, 0.72, 1.55, 0.48, 1.19, -1.59, 1.23, -0.65, 1.49, 0.05)
lm(y~x)
x <- c(0.8, 0.47, 0.51, 0.73, 0.36, 0.58, 0.57, 0.85, 0.44, 0.42)
mean(x)
library(swirl)
install_course("Advanced R Programming")
swirl()
Sys.Date()
mean(c(2,4,5))
submit()
submit()
boring_function('My first function!')
boring_function
submit()
my_mean(c(4,5,10))
submit()
submit()
remainder(5)
remainder(11,5)
remainder(divisor = 11,num =5)
remainder(4,div=2)
args(remainder)
submit()
evaluate(sd,c(1.4, 3.6, 7.9, 8.8))
evaluate(function(x){x+1},6)
evaluate(function(x){x[1],c(8,4,0)})
evaluate(function(x){x[1]},c(8,4,0)})
evaluate(function(x){x[1]},c(8,4,0))
evaluate(function(x){x[-1]},c(8,4,0))
?paste
paste("Programming", "is", "fun!")
submit
submit()
telegram('curse','words')
submit()
mad_libs('kuku','bird','childish')
submit
submit()
'I' %p% 'love' %p% 'R!'
Sys.Date()
mean(c,2,4,5)
mean(c(2, 4, 5))
submit()
boring_function('My first
| function!')
boring_function('My first function!')
boring_function()
boring_function
submit()
submit()
my_mean(c(4,5,10))
submit()
submit()
submit()
remainder(5)
remainder(11,5)
remainder(divisor = 11, num = 5)
remainder(4, div = 2)
args(remainder)
submit()
submit()
evaluate(sd,c(1.4, 3.6, 7.9, 8.8))
evaluate(function(x){x+1},6)
evaluate(function(x){x[1]},6)
evaluate(function(x){x[1]},c(8, 4, 0))
evaluate(function(x){x[length(x)]},c(8, 4, 0))
?paste
paste("Programming", "is", "fun!")
submit()
telegram('yes','boring')
submit()
mad_libs('1','2',)
mad_libs('1','2','3')
submit()
'I' %p% 'love' %p% 'R!'
library("swirl")
swirl()
map_chr(c(5, 3, 4), int_to_string)
map_lgl(c(1,2,3,4,5),gt)
map_lgl(c(1,2,3,4,5),gt,b=3)
map_if(c(1:4),is_even)
map_if(c(1:4),square,is_even)
map_if(c(1,2,34),square,is_even)
map_if(c(1,2,3,4),is_even,square)
map_at(c(4, 6, 2, 3, 8),c(1,3,4),square)
map2_chr(c(1:26),paste)
map2_chr(letters, 1:26, paste)
reduce(c(1, 3, 5, 7), add_talk)
reduce(c("a", "b", "c", "d"), paste_talk)
reduce_right(c("a", "b", "c", "d"), paste_talk)
has_element(random_ints, 45)
detect(random_ints, is_even)
detect_index(random_ints, is_even)
keep(random_ints, is_even)
discard(random_ints, is_even)
every(random_ints, function(x){x < 100})
gt_10(11)
gt_10 <- partial(gt, b = 10)
gt_10(11)
walk(mark_antony, message)
install.packages('leaflet')
library(leaflet)
my_map <- leaflet() %>%
addTiles
my_map
library(leaflet)
my_map <- leaflet() %>%
addMarkers(lat=39.2980803,lng=-765898801,popup = "Jeff's")
my_map
library(leaflet)
my_map <- leaflet() %>%
addMarkers(lat=39.2980803,lng=-76.5898801,popup = "Jeff's")
my_map
library(leaflet)
my_map <- leaflet() %>%
addMarkers(lat=39.2980803,lng=-76.5898801,popup = "Jeff's")
my_map
library(leaflet)
my_map <- leaflet() %>%
addMarkers(lat=39.2980803,lng=-76.5898801,popup = "Jeff's")
my_map
library(leaflet)
my_map <- my_map %>%
addMarkers(lat=39.2980803,lng=-76.5898801,popup = "Jeff's")
my_map
library(leaflet)
my_map <- my_map %>%
addMarkers(lat=39.2980803,lng=-76.5898801,popup = "Jeff's")
my_map
library(leaflet)
my_map <- leaflet() %>%
addTiles() %>%
addMarkers(lat=39.2980803,lng=-76.5898801,popup = "Jeff's")
my_map
df <- data.frame(lat = runif(20,min=39.2,max=39.3),
lng = runif(20,min=-76.6,max=-76.5))
df
my_map <- df%>%
leaflet() %>%
addTiles() %>%
addMarkers()
my_map
nusIcon <- makeIcon(
iconUrl = "https://upload.wikimedia.org/wikipedia/en/b/b9/NUS_coat_of_arms.svg"
)
my_map <- df%>%
leaflet() %>%
addTiles() %>%
addMarkers(icon = nusIcon)
my_map
nusIcon <- makeIcon(
iconUrl = "https://upload.wikimedia.org/wikipedia/en/b/b9/NUS_coat_of_arms.svg",
iconWidth = 31*215/230, iconHeight = 31,
iconAnchorX = 31*215/230/2, iconAnchorY =16
)
my_map <- df%>%
leaflet() %>%
addTiles() %>%
addMarkers(icon = nusIcon)
my_map
nusIcon <- makeIcon(
iconUrl = "https://upload.wikimedia.org/wikipedia/en/b/b9/NUS_coat_of_arms.svg",
iconWidth = 31*215/230, iconHeight = 31,
iconAnchorX = 31*215/230/2, iconAnchorY =16
)
nussites <- "<a href=https://nus.edu.sg/>NUS</a>"
my_map <- df%>%
leaflet() %>%
addTiles() %>%
addMarkers(icon = nusIcon, popup = nussites)
my_map
my_map <- df%>%
leaflet() %>%
addTiles() %>%
addMarkers(icon = nusIcon, popup = nussites,clusterOptions = markerClusterOptions())
my_map
my_map <- df%>%
leaflet() %>%
addTiles() %>%
addCircleMarkers(icon = nusIcon, popup = nussites,clusterOptions = markerClusterOptions())
my_map
my_map <- df%>%
leaflet() %>%
addTiles() %>%
addMarkers(icon = nusIcon, popup = nussites,clusterOptions = markerClusterOptions())
my_map
my_map <- df%>%
leaflet() %>%
addTiles() %>%
addCircleMarkers()
my_map
my_map <- leaflet() %>%
addTiles() %>%
addMarkers(lat=1.2966,lng=103.7764,popup = "NUS")
my_map
nusIcon <- makeIcon(
iconUrl = "https://upload.wikimedia.org/wikipedia/en/b/b9/NUS_coat_of_arms.svg",
iconWidth = 31*215/230, iconHeight = 31,
iconAnchorX = 31*215/230/2, iconAnchorY =16
)
nussite <- "<a href=https://nus.edu.sg/>NUS</a><br>21 Lower Kent Ridge Rd<br>Singapore 119077"
my_map <- leaflet() %>%
addTiles() %>%
addMarkers(lat=1.2966,lng=103.7764,icon=nusIcon,popup = nussite)
my_map
getwd()
setwd("C:\Users\eejin\Documents\GitHub\randomstuff\coursera\government-fiscal-position-annual")
setwd("C:/Users/eejin/Documents/GitHub/randomstuff/coursera/government-fiscal-position-annual")
df <- read.csv("./government-expenditure-by-type.csv")
View(df)
fig <- plot_ly(
x = df$financial_year,
y = df$amount,
type = "bar"
)
fig
library(plotly)
fig <- plot_ly(
x = df$financial_year,
y = df$amount,
type = "bar"
)
fig
fig <- plot_ly(
x = df$financial_year,
y = df$amount,
color = df$class
type = "bar"
)
fig <- plot_ly(
x = df$financial_year,
y = df$amount,
color = df$class,
type = "bar"
)
fig
fig <- plot_ly(
x = df$financial_year,
y = df$amount,
color = df$category,
type = "bar"
)
fig
df <- df[[df$financial_year in c('2017','2018')]]
df[df$financial_year %in% c('2017','2018')]
df[df$financial_year %in% c(2017,2018)]
df$financial_year
df$financial_year %in% c(2017,2018)
df[df$financial_year %in% c(2017,2018)]
df <- df[df$financial_year %in% c(2017,2018),]
fig <- plot_ly(
x = df$financial_year,
y = df$amount,
color = df$category,
type = "bar"
)
fig
fig <- plot_ly(
x = df$financial_year,
y = df$amount,
color = df$class,
type = "bar"
)
fig
df <- read.csv("./government-expenditure-by-type.csv")
library(plotly)
df <- df[df$financial_year %in% c(2018,2019,2020,2021),]
fig <- plot_ly(
x = df$financial_year,
y = df$amount,
color = df$class,
type = "bar"
)
fig
fig <- plot_ly(
x = df$financial_year,
y = df$amount,
color = df$class,
type = "bar",
title = "Singapore Government Expediture (2018 - 2021)"
)
fig
fig <- fig %>% layout(title = "Singapore Government Expediture (2018 - 2021)")
fig
fig <- fig %>% layout(title = "Singapore Government Expediture (2018 - 2021)",
xaxis = list(title= "Year").
yaxis = list(title = "Amount (in millions)"))
fig
fig <- fig %>% layout(title = "Singapore Government Expediture (2018 - 2021)",
xaxis = list(title= "Year").
yaxis = list(title = "Amount (in millions)"))
fig <- fig %>% layout(title = "Singapore Government Expediture (2018 - 2021)",
xaxis = list(title= "Year"),
yaxis = list(title = "Amount (in millions)"))
fig
